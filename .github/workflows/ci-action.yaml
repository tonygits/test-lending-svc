# This workflow will do a clean installation of node dependencies, cache/restore them, build the source code and run tests across different versions of node
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-nodejs

name: Build Step

on:
  push:
    branches:
      - 'main'
  pull_request:
    branches:
      - 'main'

env:
  REGISTRY: "index.docker.io"
  LENDING_APP_API_IMAGE_NAME: "test-lending-svc"

jobs:
  test:
    name: Test
    runs-on: ubuntu-latest
        # See supported Node.js release schedule at https://nodejs.org/en/about/releases/
    steps:
      #set up go version
      - name: Set up go 1.17
        uses: actions/setup-go@v3
        with:
          go-version: 1.17

      #checkout repo
      - name: checkout repo
        uses: actions/checkout@v3

      #cache go modules
      - name: cache go modules
        uses: actions/cache@preview
        with:
          path: ~/go/pkg/mod
          key: ${{ runner.os }}-build-${{ hashFiles('**/go.sum') }}
          restore-keys: |
            ${{ runner.OS }}-build-${{ env.cache-name }}-
            ${{ runner.OS }}-build-
            ${{ runner.OS }}-

      #install static check
      - name: install static check
        run: go install honnef.co/go/tools/cmd/staticcheck@v0.2.2

      #run static check
      - name: run static checks
        run: ~/go/bin/staticcheck ./...

      # build app
      - name: build lending app
        run: go build -o toprated main.go

      # run tests
      - name: Test
        run: go test -v -cover ./...

  build-and-push-docker-image:
    name: Build Docker image and push to repositories
    # run only when code is compiling and tests are passing
    runs-on: ubuntu-latest
    needs: ['test']

    # steps to perform in job
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      # setup Docker build action
      - name: Set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@v2

      - name: Login to DockerHub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USER }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Login to Github Packages
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.G_TOKEN }}

      - name: Build api image
        run: docker build --tag $(echo $REGISTRY)/mrgitau/$(echo $LENDING_APP_API_IMAGE_NAME):$(echo $GITHUB_SHA | head -c7) .

      - name: Push api image to Container Registry
        run: docker push $(echo $REGISTRY)/mrgitau/$(echo $LENDING_APP_API_IMAGE_NAME):$(echo $GITHUB_SHA | head -c7)

      - name: Image digest
        run: echo ${{ steps.docker_build.outputs.digest }}

  update-manifest-stage:
    runs-on: ubuntu-latest
    needs: ['build-and-push-docker-image']
    steps:
      - uses: actions/checkout@v3
        with:
          repository: tonygits/lending-app-infra
          ref: 'main'
          token: ${{ secrets.G_TOKEN }}
      - name: setup git config
        run: |
          git config --global user.email "gitau.ag@gmail.com"
          git config --global user.name "tonygits"
          echo ${{ github.sha }}
          sed -i "s#mrgitau.*#mrgitau/test-lending-svc:${{ github.sha }}#g" deployment.yaml
          git add -A
          git commit -am "Update image for - ${{ github.sha }}"
      - run: echo ${{ github }}
      - run: git push origin master